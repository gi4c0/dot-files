* Org-mode
** Org bullets
   Add nice bullets instead of default asterisk
   #+BEGIN_SRC emacs-lisp
     (use-package org-bullets
       :ensure t
       :config
       (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))
   #+END_SRC

* Packages
** beacon
#+BEGIN_SRC emacs-lisp
(use-package beacon
  :ensure t
  :init
  (beacon-mode 1))
#+END_SRC

** which-key
#+BEGIN_SRC emacs-lisp
(use-package which-key
  :ensure t
  :init
  (which-key-mode))
#+END_SRC

** avy
#+BEGIN_SRC emacs-lisp
  (use-package avy
    :ensure t
    :bind ("M-s" . avy-goto-char))
#+END_SRC

** rainbow
   Adds background color for 'hashed' values =#000000=
#+BEGIN_SRC emacs-lisp
  (use-package rainbow-mode
    :ensure t
    :init (rainbow-mode 1))
#+END_SRC
* git
** magit
*** install
   #+BEGIN_SRC emacs-lisp
     (use-package magit :ensure t)
   #+END_SRC
*** configure
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x g") 'magit-status)
#+END_SRC
** evil-magit
#+BEGIN_SRC emacs-lisp
  (use-package evil-magit :ensure t)
#+END_SRC   
* evil-mode
** Enabling =evil mode=
#+BEGIN_SRC emacs-lisp
(use-package evil
  :ensure t
  :init
  (evil-mode 1))
#+END_SRC
** Add surround feature from vim
#+BEGIN_SRC emacs-lisp
(use-package evil-surround
  :ensure t
  :config
  (global-evil-surround-mode 1))
#+END_SRC

** Keybindings
*** Set "C-w C-l" and "C-w C-h" to switch windows
#+BEGIN_SRC emacs-lisp
  (define-key evil-normal-state-map (kbd "C-w C-h") 'evil-window-left)
  (define-key evil-normal-state-map (kbd "C-w C-j") 'evil-window-down)
  (define-key evil-normal-state-map (kbd "C-w C-k") 'evil-window-up)
  (define-key evil-normal-state-map (kbd "C-w C-l") 'evil-window-right)
#+END_SRC
* Emacs default configuration 
** Variables
*** Disable auto-save backup files
   #+BEGIN_SRC emacs-lisp
(setq make-backup-file nil)
(setq auto-save-default nil)
   #+END_SRC
   
*** Disable rings (bells)
#+BEGIN_SRC emacs-lisp
(setq ring-bell-function 'ignore)
(setq scroll-conservatively 100)
#+END_SRC

*** Disable curosr blinking
#+BEGIN_SRC emacs-lisp
  (blink-cursor-mode 0)
#+END_SRC
** With editor functions
   Emacs always creates =~filname.ext~= files with backup. Disabling this behaviour:
#+BEGIN_SRC emacs-lisp
     (tool-bar-mode -1)
     (scroll-bar-mode -1)
#+END_SRC
* Ido
** Enable ido mode
#+BEGIN_SRC emacs-lisp
  (setq ido-enable-flex-matching nil)
  (setq ido-create-new-buffer 'always)
  (setq ido-everywhere t)
  (ido-mode 1)
#+END_SRC
** ido vertical
#+BEGIN_SRC emacs-lisp
  (use-package ido-vertical-mode
    :ensure t
    :init
    (ido-vertical-mode 1))
  (setq ido-vertical-define-keys 'C-n-and-C-p-only)
#+END_SRC
** smex
#+BEGIN_SRC emacs-lisp
  (use-package smex
    :ensure t
    :init (smex-initialize)
    :bind ("M-x" . smex))
#+END_SRC
** switch buffer
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x C-b") 'ido-switch-buffer)
#+END_SRC
* Buffers
** enable ibuffer
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x b") 'ibuffer)
#+END_SRC
* Config edit/reload
** edit
#+BEGIN_SRC emacs-lisp
(defun config-visit ()
    (interactive)
    (find-file "~/.emacs.d/config.org"))

(global-set-key (kbd "C-c e") 'config-visit)
#+END_SRC

** reload
#+BEGIN_SRC emacs-lisp
  (defun config-reload ()
    (interactive)
    (org-babel-load-file (expand-file-name "~/.emacs.d/config.org")))

  (global-set-key (kbd "C-c r") 'config-reload)
#+END_SRC

